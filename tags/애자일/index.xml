<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>애자일 on Jaehue&#39;s</title>
    <link>https://jaehue.github.io/tags/%EC%95%A0%EC%9E%90%EC%9D%BC/</link>
    <description>Recent content in 애자일 on Jaehue&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 11 Nov 2022 12:11:19 +0800</lastBuildDate>
    
	<atom:link href="https://jaehue.github.io/tags/%EC%95%A0%EC%9E%90%EC%9D%BC/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>위험한 것을 안전하게 하기</title>
      <link>https://jaehue.github.io/post/2022.10.17/</link>
      <pubDate>Fri, 11 Nov 2022 12:11:19 +0800</pubDate>
      
      <guid>https://jaehue.github.io/post/2022.10.17/</guid>
      <description>2016년 안영회님이 &amp;ldquo;아기발걸음(Baby Step)&amp;ldquo;을 얘기 했을 때는 &amp;lsquo;그냥 좋은 말이겠거니…&amp;rsquo; 생각했었다. 일주일 단위로 빠르게 움직이는 조직 안에서 4년을 보냈지만 그게 내 삶에 체화되지는 않았었다.
그러다, 2020년 XP 책을 다시 읽고 눈이 번쩍 떠졌다. 내 삶의 지침서로 받아들이고 진짜 이렇게 살아보려고 했다.
그때부터 내 삶의 주기를 일주일로 두고, 일주일 마다 변화를 만들어보려고 했었다.
처음으로 기타 연습을 시작했고, 아프리카 여행 추억팔이 용으로만 가지고 있던 젬베를 들고 교회 찬양팀에 들어가 다른 세션들이랑 맞춰보기 시작했다.</description>
    </item>
    
    <item>
      <title>힘의 분산</title>
      <link>https://jaehue.github.io/post/2022.03.15/</link>
      <pubDate>Sat, 05 Mar 2022 14:31:50 +0800</pubDate>
      
      <guid>https://jaehue.github.io/post/2022.03.15/</guid>
      <description>남의 일이 아닌, 내 일 새로 합류한 3명의 동료 이야기다.
매일 아침 데일리 미팅을 하기로 했고. “어제 한 일, 오늘 할 일, 이슈” 딱 이 3가지만 공유하자고 했다. 이슈를 말하라고 했더니, 개발하면서 만났던 여러 어려움을 얘기한다. 그런건 이슈가 아니라고 했다. 이슈가 뭐냐면,
 어제 하루 일을 시작하기 전 계획이 있었을 텐데. 하루를 살아보니 계획대로 안되더라 =&amp;gt; 이건 당연한 거다.!
그래서 계획이 틀어진 상태로 오늘을 시작했는데, 계획과 실제의 공백이 너무 커져서 이번 주 목표에 차질이 생길 것 같다.</description>
    </item>
    
    <item>
      <title>변화하는 동료들</title>
      <link>https://jaehue.github.io/post/2022.02.28/</link>
      <pubDate>Mon, 28 Feb 2022 16:53:11 +0800</pubDate>
      
      <guid>https://jaehue.github.io/post/2022.02.28/</guid>
      <description>오랜만에 사무실 이야기다.
반년 전, 팀에서 코드 리뷰를 하자고 했을 때 동료들은 불편한 기색을 내비쳤다. 하지만 그들은 나의 제안을 따르는 것 말고는 별다른 방법이 없었다.
내가 코드 리뷰를 시작하기 전 먼저 했던 일은 gitlab runner를 사용해 배포 파이프라인을 구성해 놓는 일이었다. merge request를 만들고, 코드 리뷰를 거치고, 최종적으로 merge가 되어야 배포가 되도록 했다. 그리고 난 개발의 결과를 스테이징 환경에 배포된 것으로만 확인한다고 했다. 개인 PC에서 돌아가는 건 인정하지 않았다 ㅋ</description>
    </item>
    
    <item>
      <title>진짜 문제를 풀어가는 과정</title>
      <link>https://jaehue.github.io/post/2021.12.08/</link>
      <pubDate>Wed, 08 Dec 2021 08:20:19 +0800</pubDate>
      
      <guid>https://jaehue.github.io/post/2021.12.08/</guid>
      <description>오랜만에 사무실 이야기다.
중국 회사에서 일한 지 일 년 반 정도가 되었다. 한번 이직해서 지금은 두 번째 회사다.
이번 회사에서는 회의에 참여 할 때가 많은데, 주로 복잡한 문제를 풀어야 하는 설계 관련 회의다.
나는 아직 중국 친구들이 말하는 디테일한 내용까지 모두 다 알아듣지 못한다.
겨우겨우 이해해서 부족한 정보를 바탕으로 판단을 내려야 할 때가 많다.
자연스럽게 한 발 떨어진 관찰자 입장에서 판단을 내리게 되는데, 때론 이런 나의 입장이 도움이 될 때도 있는 것 같다.</description>
    </item>
    
    <item>
      <title>말이 통하지 않아도 원하는 것을 해내는 비법</title>
      <link>https://jaehue.github.io/post/2021.08.01/</link>
      <pubDate>Sun, 01 Aug 2021 00:55:33 +0800</pubDate>
      
      <guid>https://jaehue.github.io/post/2021.08.01/</guid>
      <description>다른 사람에 비해 내가 특별히 잘하는 것이 있다.
그건 바로, 언어가 달라 말이 통하지 않는 곳에서 원하는 것을 해내는 것이다.
전문적인 기술이라 하기엔 좀 잡스러운(?) 느낌이 있긴 하지만, 어디서 생겨났는지 모르는 이 능력(?)에 대해 궁금해졌고, 이것을 진지하게 파헤쳐보고 싶어졌다.
경험들 일단 나의 경험에 대한 썰을 먼저 풀어본다.
오스트리아(독일어)에서 억울한 벌금 환불받기, 2007년 2007년 오스트리아를 여행할 때, 터미널에서 버스를 타면서 벌금을 내게 되었다.
나중에서야 그건 단순한 의사소통 문제였고, 내가 부당한 벌금을 냈다는 것을 알게 되었다.</description>
    </item>
    
    <item>
      <title>시끌벅적한 사무실 만들기</title>
      <link>https://jaehue.github.io/post/2021.07.23/</link>
      <pubDate>Fri, 23 Jul 2021 22:27:22 +0800</pubDate>
      
      <guid>https://jaehue.github.io/post/2021.07.23/</guid>
      <description>아주 작은 변화, 시작 &amp;lt;7월 1일&amp;gt; 새로운 회사로 이직한 지 2달이 지났다.
사무실 분위기는 꽤 시끌벅적한데. 개발자들은 입도 뻥끗 안 하고 심각한 얼굴로 모니터만 쳐다보고 있고, 고객과 소통하는 사람들의 전화 목소리만 우렁차다. 우렁찬 목소리에는 넘치는 자신감(?)과 회사 내에서의 위치(?)가 드러나는 것 같다. 개발자들은 식사할 때조차 입을 잘 열지 않는다.
나와 함께 일하는 몇몇 친구들에게 git으로 협업하는 방법을 설명해주고, 이번 주부터 gitlab의 Merge Request 기능을 써서 코드 리뷰를 하기로 했다. 이슈를 등록하고, 브런치를 만들고, 코드 작성 후 자신의 repo에 푸쉬하고, Merge Request를 만들고, 디스커션을 하고, 머지를 하는 과정을 보여주며 설명해주었다.</description>
    </item>
    
    <item>
      <title>일하지 않는 사람은 가라</title>
      <link>https://jaehue.github.io/post/2020.04.04.devculture/</link>
      <pubDate>Sat, 04 Apr 2020 13:46:52 +0800</pubDate>
      
      <guid>https://jaehue.github.io/post/2020.04.04.devculture/</guid>
      <description>2020-04-29 팝잇(popit)에 기고한 글 ⤴️
 이 글은 적당히 갖춰나간 운영 환경의 후속 글이다. 이전 글에서는 서비스의 외형적인 모습을 소개했다면, 이번 글에서는 그것을 가능하게 했던 내부의 문화를 소개한다.
MSAMicro Service Architecture
이 삽질을 3년이나 하고 나서야 뼛속까지 알게 되었다. 이건 기술의 문제가 아니었다. 문화였고 일하는 방식이었다. 익스트림 프로그래밍Extreme Programming, 이하 XP이 소개된 지는 이미 20년이 넘었지만, 계속해서 XP를 얘기하는 이유는 MSAMicro Service Architecture는 일하는 방식과 떼어서 얘기할 수 없기 때문이다.</description>
    </item>
    
  </channel>
</rss>